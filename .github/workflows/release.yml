name: release

on:
  release:
    types: [published]

jobs:
  publish:
    # This job publishes the package to PyPI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./sdk
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Create source and wheel dist
      # (2024-12-11, s-heppner)
      # The PyPI Action expects the dist files in a toplevel `/dist` directory,
      # so we have to specify this as output directory here.
      run: |
        python -m build --outdir ../dist
    - name: Publish distribution to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_ORG_TOKEN }}

  build-and-push:
    # This job publishes the server docker image to DockerHub
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Extract Docker image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.DOCKERHUB_USERNAME }}/basyx-python-server
          tags: |
            type=semver,pattern={{version}}
            type=raw,value=latest
          labels: |
            org.opencontainers.image.title=BaSyx Python Server
            org.opencontainers.image.description=Eclipse BaSyx Python SDK - HTTP Server
            org.opencontainers.image.source=https://github.com/eclipse-basyx/basyx-python-sdk/tree/main/server
            org.opencontainers.image.licenses=MIT

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: ..
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}


